// Generated by Haxe 3.3.0
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = true;
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0?12:hour),e == "I"?"0":" ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H"?"0":" ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null?HxOverrides.substr(f,p,null):HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null?HxOverrides.substr(f,p,null):HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.exists = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(f(tmp.next())) {
		return true;
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var x = tmp.next();
		if(f(x)) {
			l.add(x);
		}
	}
	return l;
};
var List = function() {
	this.length = 0;
};
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = true;
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	$("document").ready(function(event) {
		view_Searchbox.init();
		view_Header.init();
		view_Editbox.init();
		view_Works.init();
		ui_Keyboard.init();
	});
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
haxe_Http.__name__ = true;
haxe_Http.prototype = {
	setParameter: function(param,value) {
		this.params = Lambda.filter(this.params,function(p) {
			return p.param != param;
		});
		this.params.push({ param : param, value : value});
		return this;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				uri += encodeURIComponent(p.param) + "=" + encodeURIComponent(p.value);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question?"?":"&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,toString: function() {
		var s_b = "";
		s_b = "{";
		var keys = this.arrayKeys();
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var k = keys[i];
			s_b += k == null?"null":"" + k;
			s_b += " => ";
			s_b += Std.string(Std.string(__map_reserved[k] != null?this.getReserved(k):this.h[k]));
			if(i < keys.length - 1) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
};
var jp_saken_utils_API = function() { };
jp_saken_utils_API.__name__ = true;
jp_saken_utils_API.getJSON = function(name,params,onLoaded) {
	jp_saken_utils_API.getString(name,params,function(data) {
		onLoaded(JSON.parse(data));
	});
};
jp_saken_utils_API.getString = function(name,params,onLoaded) {
	var http = new haxe_Http("/api/" + name + "/");
	http.onData = function(data) {
		onLoaded(data);
	};
	var tmp = params.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		http.setParameter(key,__map_reserved[key] != null?params.getReserved(key):params.h[key]);
	}
	http.request(true);
};
jp_saken_utils_API.getIP = function(onLoaded) {
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.key != null) {
		_g.setReserved("key","ip");
	} else {
		_g.h["key"] = "ip";
	}
	jp_saken_utils_API.getString("handy",_g,onLoaded);
};
var jp_saken_utils_Dom = function() { };
jp_saken_utils_Dom.__name__ = true;
var jp_saken_utils_File = function() { };
jp_saken_utils_File.__name__ = true;
jp_saken_utils_File.downloadDirect = function(folder,filename) {
	var jAnchor = $("<a>");
	jAnchor.prop("download",filename);
	jAnchor.prop("href",folder + filename);
	jAnchor.prop("target","_blank");
	$("body").append(jAnchor);
	jAnchor.get(0).click();
	jAnchor.remove();
};
jp_saken_utils_File.readAsDataURL = function(onLoaded) {
	var file = event.target.files[0];
	var fileReader = new FileReader();
	fileReader.onload = function(event) {
		onLoaded(event.target.result);
	};
	fileReader.readAsDataURL(file);
};
var jp_saken_utils_Handy = function() { };
jp_saken_utils_Handy.__name__ = true;
jp_saken_utils_Handy.alert = function(value) {
	window.alert(value);
};
jp_saken_utils_Handy.confirm = function(text,ok,cancel) {
	if(window.confirm(text)) {
		ok();
	} else if(cancel != null) {
		cancel();
	}
};
jp_saken_utils_Handy.getPastDate = function(date,num) {
	if(num == null) {
		num = 30;
	}
	var second = HxOverrides.strDate(date).getTime() - num * 86400000;
	var date1 = new Date(second);
	var m = jp_saken_utils_Handy.getFilledNumber(date1.getMonth() + 1,2);
	var d = jp_saken_utils_Handy.getFilledNumber(date1.getDate(),2);
	return date1.getFullYear() + "-" + m + "-" + d;
};
jp_saken_utils_Handy.getFilledNumber = function(num,digits) {
	if(digits == null) {
		digits = 3;
	}
	var result = num + "";
	var blankLength = digits - jp_saken_utils_Handy.getDigits(num);
	var _g1 = 0;
	while(_g1 < blankLength) {
		++_g1;
		result = "0" + result;
	}
	return result;
};
jp_saken_utils_Handy.getDigits = function(val) {
	return (val + "").length;
};
jp_saken_utils_Handy.getFormattedPrice = function(price) {
	var string = price == null?"null":"" + price;
	var length = string.length;
	var result = "";
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		if(i > 0 && (length - i) % 3 == 0) {
			result += ",";
		}
		result += string.charAt(i);
	}
	return "￥" + result + "-";
};
jp_saken_utils_Handy.getLinkedHTML = function(text,target) {
	if(target == null) {
		target = "_blank";
	}
	if(new EReg("http","").match(text)) {
		text = text.replace(new RegExp("((http|https)://[0-9a-z-/._?=&%\\[\\]~^:]+)","gi".split("u").join("")),"<a href=\"$1\" target=\"" + target + "\">$1</a>");
	}
	return text;
};
jp_saken_utils_Handy.getBreakedHTML = function(text) {
	if(new EReg("\n","").match(text)) {
		text = text.replace(new RegExp("\r?\n","g".split("u").join("")),"<br>");
	}
	return text;
};
jp_saken_utils_Handy.getAdjustedHTML = function(text) {
	return jp_saken_utils_Handy.getLinkedHTML(jp_saken_utils_Handy.getBreakedHTML(text));
};
jp_saken_utils_Handy.getLines = function(text) {
	return jp_saken_utils_Handy.getNumberOfCharacter(text,"\n") + 1;
};
jp_saken_utils_Handy.getNumberOfCharacter = function(text,character) {
	return text.split(character).length - 1;
};
jp_saken_utils_Handy.getLimitText = function(text,count) {
	if(count == null) {
		count = 10;
	}
	if(text.length > count) {
		text = HxOverrides.substr(text,0,count) + "...";
	}
	return text;
};
jp_saken_utils_Handy.getReplacedSC = function(text) {
	text = StringTools.replace(text,"'","&#039;");
	text = StringTools.replace(text,"\\","&#47;");
	return text;
};
jp_saken_utils_Handy.getSlicedArray = function(array,num) {
	if(num == null) {
		num = 1000;
	}
	var results = [];
	var _g1 = 0;
	var _g = Math.ceil(array.length / num);
	while(_g1 < _g) {
		var j = _g1++ * num;
		results.push(array.slice(j,j + num));
	}
	return results;
};
jp_saken_utils_Handy.shuffleArray = function(array) {
	var copy = array.slice();
	var results = [];
	var length = copy.length;
	var _g1 = 0;
	while(_g1 < length) {
		++_g1;
		var index = Math.floor(Math.random() * length);
		results.push(copy[index]);
		copy.splice(index,1);
	}
	return results;
};
jp_saken_utils_Handy.getMap = function(array) {
	var map = new haxe_ds_IntMap();
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var info = array[_g1++];
		var id = info.id;
		Reflect.deleteField(info,"id");
		var fields = Reflect.fields(info);
		var value;
		if(fields.length > 1) {
			value = info;
		} else {
			var field = fields[0];
			var tmp;
			if(info == null) {
				value = null;
			} else {
				var tmp1;
				if(info.__properties__) {
					tmp = info.__properties__["get_" + field];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					value = info[tmp]();
				} else {
					value = info[field];
				}
			}
		}
		map.h[id] = value;
	}
	return map;
};
jp_saken_utils_Handy.getIsImageSource = function(string) {
	return new EReg("data:image","").match(string);
};
jp_saken_utils_Handy.timer = function(func,time) {
	if(time == null) {
		time = 1000;
	}
	var timer = new haxe_Timer(time);
	timer.run = function() {
		timer.stop();
		func();
	};
};
jp_saken_utils_Handy.prototype = {
	getRoundNumber: function(val,digits) {
		var m = Math.pow(10,digits);
		var d = Math.pow(.1,digits);
		return Math.floor(val * m) * d;
	}
};
var jp_saken_utils_Loader = function() { };
jp_saken_utils_Loader.__name__ = true;
jp_saken_utils_Loader.loadImage = function(src,onLoaded) {
	var image = new Image();
	image.src = src;
	image.onload = function(event) {
		var splits = src.split(";base64,");
		var type = splits[0].split("data:image/")[1];
		var jImage = $(image);
		if(type == "jpeg") {
			type = "jpg";
		}
		jImage.data("type",type);
		jImage.data("base64",splits[1]);
		onLoaded(jImage);
	};
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var ui_Keyboard = function() { };
ui_Keyboard.__name__ = true;
ui_Keyboard.init = function() {
	jp_saken_utils_Dom.jWindow.on("keydown",null,ui_Keyboard.onKeydown);
};
ui_Keyboard.onKeydown = function(event) {
	var keyCode = event.keyCode;
	if(event.ctrlKey) {
		if(keyCode == 69) {
			view_Editbox.toggle();
		}
	}
};
var utils_Data = function() { };
utils_Data.__name__ = true;
utils_Data.load = function(keyword,from,to) {
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.from != null) {
		_g.setReserved("from",from);
	} else {
		_g.h["from"] = from;
	}
	if(__map_reserved.to != null) {
		_g.setReserved("to",to);
	} else {
		_g.h["to"] = to;
	}
	var params = _g;
	if(keyword.length > 0) {
		if(__map_reserved.client != null) {
			params.setReserved("client",keyword);
		} else {
			params.h["client"] = keyword;
		}
	}
	jp_saken_utils_API.getJSON("webResults2",params,function(data) {
		if(data.length == 0) {
			params.remove("client");
			if(__map_reserved.keyword != null) {
				params.setReserved("keyword",keyword);
			} else {
				params.h["keyword"] = keyword;
			}
			jp_saken_utils_API.getJSON("webResults2",params,utils_Data.onLoaded);
			return;
		}
		utils_Data.onLoaded(data);
	});
};
utils_Data.insert = function(params,onLoaded) {
	if(__map_reserved.mode != null) {
		params.setReserved("mode","insert");
	} else {
		params.h["mode"] = "insert";
	}
	utils_Data.set(params,onLoaded);
};
utils_Data.update = function(id,params,onLoaded) {
	var v = id == null?"null":"" + id;
	if(__map_reserved.id != null) {
		params.setReserved("id",v);
	} else {
		params.h["id"] = v;
	}
	if(__map_reserved.mode != null) {
		params.setReserved("mode","update");
	} else {
		params.h["mode"] = "update";
	}
	utils_Data.set(params,onLoaded);
};
utils_Data.loadOne = function(id,onLoaded) {
	var _g = new haxe_ds_StringMap();
	var value = id == null?"null":"" + id;
	if(__map_reserved.id != null) {
		_g.setReserved("id",value);
	} else {
		_g.h["id"] = value;
	}
	jp_saken_utils_API.getJSON("webResults2",_g,function(data) {
		onLoaded(data[0]);
	});
};
utils_Data.onLoaded = function(data) {
	if(data.length > 0) {
		view_Works.setHTML(utils_Data.getSplitedData(data));
	} else {
		view_Works.setEmptyHTML();
	}
	utils_Data.traceMembersCost(data);
};
utils_Data.set = function(params,onLoaded) {
	jp_saken_utils_API.getString("webResults2",params,function(data) {
		onLoaded();
	});
};
utils_Data.getSplitedData = function(data) {
	var map = new haxe_ds_IntMap();
	var _g1 = 0;
	var _g = data.length;
	while(_g1 < _g) {
		var info = data[_g1++];
		var date = info.date;
		var array = map.h[date];
		if(array == null) {
			array = [];
		}
		array.push(info);
		map.h[date] = array;
	}
	return map;
};
utils_Data.traceMembersCost = function(data) {
	var map = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g = data.length;
	while(_g1 < _g) {
		var ratioList = data[_g1++].price_ratio_list;
		if(ratioList == null) {
			continue;
		}
		var ratios = ratioList.split(",");
		var _g3 = 0;
		var _g2 = ratios.length;
		while(_g3 < _g2) {
			var splits = ratios[_g3++].split("=");
			var member = splits[0];
			var cost = Std.parseInt(splits[1]);
			var total = __map_reserved[member] != null?map.getReserved(member):map.h[member];
			if(total == null) {
				total = 0;
			}
			total += cost;
			if(__map_reserved[member] != null) {
				map.setReserved(member,total);
			} else {
				map.h[member] = total;
			}
		}
	}
	console.log(map.toString());
};
var view_Editbox = function() { };
view_Editbox.__name__ = true;
view_Editbox.init = function() {
	view_Editbox._jParent = $("#editbox");
	view_Editbox._jMainArea = $("#all").add($("#header"));
	view_Editbox._jCover = view_Editbox._jParent.find(".cover");
	view_Editbox._jColumns = view_Editbox._jParent.find("[data-column]");
	view_Editbox._jPreview = view_Editbox._jParent.find(".image").find(".preview");
	view_Editbox._width = view_Editbox._jParent.width();
	view_Editbox._isOpened = false;
	view_Editbox._jParent.on("change",null,view_Editbox.onChange);
	view_Editbox._jParent.on("click",null,view_Editbox.onClick);
	view_Editbox.setRatio();
	view_Editbox.setSales();
};
view_Editbox.toggle = function() {
	view_Editbox._currentID = null;
	if(view_Editbox._isOpened) {
		view_Editbox.close();
	} else {
		view_Editbox.open();
	}
};
view_Editbox.edit = function(id) {
	view_Editbox._currentID = id;
	view_Editbox.open();
	utils_Data.loadOne(id,view_Editbox.setData);
};
view_Editbox.close = function() {
	if(!view_Editbox._isOpened) {
		return;
	}
	view_Editbox._isOpened = false;
	view_Editbox.move(0);
};
view_Editbox.setDefault = function() {
	view_Editbox._jColumns.prop("value","");
	view_Editbox._jColumns.filter("[type=\"radio\"]").prop("checked",true);
	view_Editbox._jColumns.filter("select").each(function(index,element) {
		var jTarget = $(element);
		jTarget.prop("value",jTarget.find("option").first().prop("value"));
	});
	view_Editbox._jParent.find(".ratio-input").prop("value",0).trigger("change");
	view_Editbox._jParent.find("#editbox-date").prop("value",DateTools.format(new Date(),"%Y-%m"));
	view_Editbox._jPreview.empty();
};
view_Editbox.setData = function(data) {
	var setDate = function(jTarget,value) {
		jTarget.prop("value",view_Html.getFormattedDate(value,"-"));
	};
	var setRadio = function(jTarget1,isOn) {
		if(!isOn) {
			return;
		}
		jTarget1.prop("checked",false);
		jTarget1.nextAll("input").prop("checked",true);
	};
	var setImage = function(jTarget2,value1) {
		if(!jp_saken_utils_Handy.getIsImageSource(value1)) {
			return;
		}
		jTarget2.html("<img src=\"" + value1 + "\">");
	};
	var setRatio = function(jParent,data1) {
		if(data1 == null) {
			return;
		}
		var ratios = data1.split(",");
		var _g1 = 0;
		var _g = ratios.length;
		while(_g1 < _g) {
			var splits = ratios[_g1++].split("=");
			var id = splits[0];
			var value2 = splits[1];
			jParent.find(".ratio-input[data-id=\"" + id + "\"]").prop("value",value2);
		}
		jParent.find(".ratio-input").trigger("change");
	};
	view_Editbox._jColumns.each(function(index,element) {
		var jTarget3 = $(element);
		var column = jTarget3.data("column");
		var tmp;
		var tmp1;
		if(data == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(data.__properties__) {
				tmp = data.__properties__["get_" + column];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = data[tmp]();
			} else {
				tmp1 = data[column];
			}
		}
		var value3 = tmp1;
		switch(column) {
		case "date":
			setDate(jTarget3,Std.parseInt(value3));
			break;
		case "image":
			setImage(view_Editbox._jPreview,value3);
			break;
		case "is_help":case "is_public":
			setRadio(jTarget3,value3 == "1");
			break;
		default:
			jTarget3.prop("value",value3);
		}
	});
	setRatio(view_Editbox._jParent.find(".ratio"),data.ratio_list);
};
view_Editbox.open = function() {
	if(view_Editbox._isOpened) {
		return;
	}
	view_Editbox._isOpened = true;
	view_Editbox.move(view_Editbox._width);
	view_Editbox.setDefault();
};
view_Editbox.move = function(x) {
	view_Editbox._jMainArea.stop().animate({ left : x},200);
};
view_Editbox.onChange = function(event) {
	var jTarget = $(event.target);
	if(jTarget.hasClass("ratio-input")) {
		var jParent = jTarget.parents(".ratio");
		var total = 0;
		jParent.find("input[type=\"number\"]").each(function(index,element) {
			total += Std.parseInt($(element).prop("value"));
		});
		jParent.find(".total").text(total == null?"null":"" + total);
	} else if(jTarget.hasClass("image-input")) {
		jp_saken_utils_File.readAsDataURL(view_Editbox.loadImage);
	}
};
view_Editbox.loadImage = function(src) {
	jp_saken_utils_Loader.loadImage(src,function(jImage) {
		view_Editbox._jPreview.empty().append(jImage);
	});
};
view_Editbox.onClick = function(event) {
	var jTarget = $(event.target);
	if(jTarget["is"]("[type=\"submit\"]")) {
		event.preventDefault();
		view_Editbox.submit();
	} else if(jTarget.hasClass("delete-image")) {
		view_Editbox.deleteImage();
	}
};
view_Editbox.submit = function() {
	var jRequired = view_Editbox._jParent.find("input[required]");
	var _g1 = 0;
	var _g = jRequired.length;
	while(_g1 < _g) if(jRequired.eq(_g1++).prop("value").length == 0) {
		return;
	}
	view_Editbox._jCover.show();
	if(view_Editbox._currentID == null) {
		utils_Data.insert(view_Editbox.getParams(),view_Editbox.onUpdated);
	} else {
		utils_Data.update(view_Editbox._currentID,view_Editbox.getParams(),view_Editbox.onUpdated);
	}
};
view_Editbox.deleteImage = function() {
	view_Editbox._jPreview.empty();
	view_Editbox._jColumns.filter("[data-column=\"image\"]").prop("value","");
};
view_Editbox.onUpdated = function() {
	var timer = new haxe_Timer(1000);
	timer.run = function() {
		timer.stop();
		view_Editbox.setDefault();
		view_Editbox._jCover.hide();
		if(view_Editbox._currentID != null) {
			view_Editbox._currentID = null;
			view_Editbox.close();
		}
		view_Searchbox.reload();
	};
};
view_Editbox.getParams = function() {
	var params = new haxe_ds_StringMap();
	view_Editbox._jColumns.each(function(index,element) {
		var jTarget = $(element);
		var key = jTarget.data("column");
		var value = jTarget.prop("value");
		if(jTarget["is"]("[type=\"radio\"]")) {
			if(jTarget["is"](":checked")) {
				value = "0";
			} else {
				value = "1";
			}
		}
		if(key == "date") {
			value = StringTools.replace(value,"-","");
		}
		if(__map_reserved[key] != null) {
			params.setReserved(key,value);
		} else {
			params.h[key] = value;
		}
	});
	var v = view_Editbox.getRatioList();
	if(__map_reserved.ratio_list != null) {
		params.setReserved("ratio_list",v);
	} else {
		params.h["ratio_list"] = v;
	}
	var v1 = view_Editbox.getImageSRC();
	if(__map_reserved.image != null) {
		params.setReserved("image",v1);
	} else {
		params.h["image"] = v1;
	}
	return params;
};
view_Editbox.getRatioList = function() {
	var array = [];
	view_Editbox._jParent.find(".ratio").find(".member").each(function(index,element) {
		var jTarget = $(element);
		var id = jTarget.data("id");
		var value = jTarget.find("input").prop("value");
		if(value == "0") {
			return;
		}
		array.push(id + "=" + value);
	});
	return array.join(",");
};
view_Editbox.getImageSRC = function() {
	var src = view_Editbox._jPreview.find("img").prop("src");
	if(src == null || !jp_saken_utils_Handy.getIsImageSource(src)) {
		src = "";
	}
	return src;
};
view_Editbox.setRatio = function() {
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.team != null) {
		_g.setReserved("team","web");
	} else {
		_g.h["team"] = "web";
	}
	jp_saken_utils_API.getJSON("members",_g,function(data) {
		var html = "";
		var _g2 = 0;
		var _g1 = data.length;
		while(_g2 < _g1) {
			var info = data[_g2++];
			var id = info.id;
			var inputID = "editbox-ratio-" + id;
			html += "\n\t\t\t\t<dd class=\"member\" data-id=\"" + id + "\">\n\t\t\t\t\t<label for=\"" + inputID + "\">" + info.name.split(" ")[0] + "</label>\n\t\t\t\t\t<input type=\"number\" min=\"0\" max=\"100\" value=\"0\" class=\"ratio-input\" id=\"" + inputID + "\" data-id=\"" + id + "\">\n\t\t\t\t</dd>";
		}
		view_Editbox._jParent.find(".ratio").append(html + "<dd class=\"total\">0</dd>");
	});
};
view_Editbox.setSales = function() {
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.section != null) {
		_g.setReserved("section","sales");
	} else {
		_g.h["section"] = "sales";
	}
	jp_saken_utils_API.getJSON("members",_g,function(data) {
		var html = "";
		var _g2 = 0;
		var _g1 = data.length;
		while(_g2 < _g1) {
			var info = data[_g2++];
			html += "<option value=\"" + Std.string(info.id) + "\">" + Std.string(info.name) + "</option>";
		}
		view_Editbox._jParent.find(".sales").find("select").html(html);
	});
};
var view_Header = function() { };
view_Header.__name__ = true;
view_Header.init = function() {
	view_Header._jParent = $("#header").on("click",null,view_Header.onClick);
};
view_Header.onClick = function(event) {
	if($(event.target).hasClass("title")) {
		view_Searchbox.reset();
	}
};
var view_Html = function() { };
view_Html.__name__ = true;
view_Html.get = function(map) {
	view_Html._totalCost = 0;
	var html = "<table>";
	var tmp = map.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		html += view_Html.getMonthlyWorks(key,map.h[key]);
	}
	return html + "</table>";
};
view_Html.getFormattedDate = function(date,separator) {
	if(separator == null) {
		separator = ".";
	}
	var string = date == null?"null":"" + date;
	return HxOverrides.substr(string,0,4) + separator + HxOverrides.substr(string,4,2);
};
view_Html.getMonthlyWorks = function(key,array) {
	var monthlyCost = 0;
	var html = "\n\t\t<tr class=\"date\">\n\t\t\t<th colspan=\"" + 7 + "\">" + view_Html.getFormattedDate(key) + "</th>\n\t\t</tr>";
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var info = array[_g1++];
		html += view_Html.getWork(info);
		monthlyCost += info.cost;
	}
	view_Html._totalCost += monthlyCost;
	html += "\n\t\t<tr class=\"monthly-cost\">\n\t\t\t<td class=\"cost\" colspan=\"" + 7 + "\">月計：" + jp_saken_utils_Handy.getFormattedPrice(monthlyCost) + "</td>\n\t\t</tr>\n\t\t<tr class=\"total-cost\">\n\t\t\t<td class=\"cost\" colspan=\"" + 7 + "\">累計：" + jp_saken_utils_Handy.getFormattedPrice(view_Html._totalCost) + "</td>\n\t\t</tr>\n\t\t<tr class=\"blank\"><td colspan=\"" + 7 + "\"></td></tr>";
	return html;
};
view_Html.getWork = function(info) {
	var keys = ["number","client","name","members","sales","cost"];
	var html = "<tr class=\"work\" data-id=\"" + Std.string(info.id) + "\">";
	var _g1 = 0;
	var _g = keys.length;
	while(_g1 < _g) html += view_Html.getTD(info,keys[_g1++]);
	html += "<td class=\"edit\"><button type=\"button\" class=\"edit-button\">✎</button></td>";
	return html + "</tr>";
};
view_Html.getTD = function(info,key) {
	var content = "";
	if(key == "members") {
		var ratioList = info.price_ratio_list;
		if(ratioList != null) {
			content = view_Html.getMembers(ratioList.split(","));
		}
	} else {
		var tmp;
		var tmp1;
		if(info == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(info.__properties__) {
				tmp = info.__properties__["get_" + key];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = info[tmp]();
			} else {
				tmp1 = info[key];
			}
		}
		var value = Std.string(tmp1);
		if(value == "null") {
			value = "";
		}
		switch(key) {
		case "cost":
			content = jp_saken_utils_Handy.getFormattedPrice(Std.parseInt(value));
			break;
		case "name":
			var url = info.url;
			var name = value;
			var prop = "";
			if(url.length > 0) {
				prop = " href=\"" + url + "\" class=\"link\" target=\"_blank\"";
			}
			content = "<a" + prop + ">" + name + "</a>";
			break;
		default:
			if(value.length > 0) {
				content = value;
			} else {
				content = "-";
			}
		}
	}
	return "<td class=\"" + key + "\">" + content + "</td>";
};
view_Html.getMembers = function(ratios) {
	ratios.sort(function(a,b) {
		return Std.parseInt(b.split("=")[1]) - Std.parseInt(a.split("=")[1]);
	});
	var members = [];
	var _g1 = 0;
	var _g = ratios.length;
	while(_g1 < _g) members.push(ratios[_g1++].split("=")[0]);
	return members.join(",");
};
var view_Searchbox = function() { };
view_Searchbox.__name__ = true;
view_Searchbox.init = function() {
	view_Searchbox._jParent = $("#searchbox");
	view_Searchbox._jKeyword = view_Searchbox._jParent.find(".keyword").find("input");
	view_Searchbox._jFrom = view_Searchbox._jParent.find(".from").find("input");
	view_Searchbox._jTo = view_Searchbox._jParent.find(".to").find("input");
	view_Searchbox._jSubmit = view_Searchbox._jParent.find(".submit").find("button");
	view_Searchbox._jSubmit.on("click",null,view_Searchbox.submit);
	view_Searchbox.reset();
};
view_Searchbox.reload = function() {
	view_Searchbox._jSubmit.trigger("click");
};
view_Searchbox.reset = function() {
	view_Searchbox.setYear(new Date().getFullYear());
	view_Searchbox.searchKeyword("");
};
view_Searchbox.searchKeyword = function(keyword) {
	view_Searchbox._jKeyword.prop("value",keyword);
	view_Searchbox.reload();
};
view_Searchbox.setYear = function(year) {
	view_Searchbox._jFrom.prop("value",view_Searchbox.getFormattedDate(year,1));
	view_Searchbox._jTo.prop("value",view_Searchbox.getFormattedDate(year,12));
};
view_Searchbox.submit = function(event) {
	event.preventDefault();
	var keyword = view_Searchbox._jKeyword.prop("value");
	utils_Data.load(keyword,view_Searchbox.getDateNumber(view_Searchbox._jFrom.prop("value")),view_Searchbox.getDateNumber(view_Searchbox._jTo.prop("value")));
};
view_Searchbox.getDateNumber = function(date) {
	return StringTools.replace(date,"-","");
};
view_Searchbox.getFormattedDate = function(year,month) {
	return year + "-" + jp_saken_utils_Handy.getFilledNumber(month,2);
};
var view_Works = function() { };
view_Works.__name__ = true;
view_Works.init = function() {
	view_Works._jParent = $("#works");
	view_Works._jParent.on("click",null,view_Works.onClick);
};
view_Works.setHTML = function(map) {
	view_Works._jParent.html(view_Html.get(map));
};
view_Works.setEmptyHTML = function() {
	view_Works._jParent.html("<tr><th>検索結果：0件<th></tr>");
};
view_Works.onClick = function(event) {
	var jTarget = $(event.target);
	if(jTarget.hasClass("edit-button")) {
		view_Editbox.edit(jTarget.parents(".work").data("id"));
		return;
	} else if(jTarget.hasClass("client")) {
		view_Searchbox.searchKeyword(jTarget.text());
	}
	view_Editbox.close();
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = ["Date"];
var __map_reserved = {}
jp_saken_utils_API.PATH = "/api/";
jp_saken_utils_Dom.document = window.document;
jp_saken_utils_Dom.window = window;
jp_saken_utils_Dom.jWindow = $(jp_saken_utils_Dom.window);
jp_saken_utils_Dom.userAgent = jp_saken_utils_Dom.window.navigator.userAgent;
utils_Data.API_NAME = "webResults2";
view_Html.COLUMN_LENGTH = 7;
Main.main();
})();
